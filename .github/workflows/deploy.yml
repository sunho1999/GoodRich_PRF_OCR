name: Development Build and Test

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ main, master ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run basic import tests
      run: |
        python -c "from app import app; print('✅ App import successful')"
        python -c "from llm.gpt_summarizer import GPTSummarizer; print('✅ GPTSummarizer import successful')"
        
  docker-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build -t pdf-ocr-app:${{ github.sha }} .
        
    - name: Test Docker container
      run: |
        # 간단한 헬스 체크
        docker run --rm pdf-ocr-app:${{ github.sha }} python -c "print('✅ Docker build successful')"

  development-check:
    runs-on: ubuntu-latest
    needs: [test, docker-build]
    
    steps:
    - name: Development Check Complete
      run: |
        echo "✅ 모든 테스트와 빌드가 성공적으로 완료되었습니다."
        echo "🚀 main 브랜치로 PR을 생성하여 프로덕션 배포를 진행할 수 있습니다."
